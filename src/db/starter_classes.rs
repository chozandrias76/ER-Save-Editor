use miniz_oxide::inflate::decompress_to_vec;
use once_cell::sync::OnceCell;

/// Provides a decompressed Vagabond starter class
pub fn vagabond() -> &'static Vec<u8> {
    static VAGABOND: OnceCell<Vec<u8>> = OnceCell::new();
    VAGABOND.get_or_init(|| {
        // This is an UBER compressed Vagabond starter
        // that exited out of the game before the starting cutscene
        let compressed = vec![
            0xED, 0xDD, 0x5D, 0x8C, 0x5C, 0x65, 0x19, 0x07, 0xF0, 0xF7, 0x6C, 0xA7, 0xB4, 0x5D,
            0xB0, 0x1D, 0xB7, 0x1B, 0xB1, 0x1A, 0xEB, 0x5E, 0x28, 0xAD, 0x84, 0x90, 0x4A, 0x48,
            0x34, 0x66, 0x2F, 0x6C, 0xC4, 0x9A, 0x98, 0xA6, 0x36, 0x18, 0xC5, 0x4B, 0x6D, 0xAA,
            0x22, 0x6E, 0x90, 0xA4, 0x50, 0x8A, 0x8A, 0x1C, 0x60, 0x91, 0xB2, 0xF4, 0xCB, 0x96,
            0x48, 0xBC, 0x31, 0xA8, 0xB5, 0x2E, 0x4A, 0x71, 0x6D, 0x8C, 0xC1, 0xBA, 0x16, 0x22,
            0x75, 0xAD, 0x88, 0xD2, 0x10, 0x13, 0xAA, 0x31, 0xF5, 0x02, 0x63, 0x6A, 0xE2, 0x85,
            0x31, 0xC6, 0x60, 0x4D, 0x3A, 0x3C, 0xEF, 0x9E, 0xB3, 0xEC, 0xCC, 0xB0, 0x5B, 0xBA,
            0xA1, 0x01, 0xDA, 0xFE, 0x7E, 0xE4, 0xCF, 0xFF, 0x3C, 0x67, 0xCE, 0x9C, 0x9D, 0x39,
            0x33, 0xFD, 0xCA, 0xB9, 0x78, 0x1F, 0x4C, 0x59, 0xD1, 0x9B, 0x6A, 0x8D, 0x1B, 0xEF,
            0x79, 0xF3, 0xAD, 0x57, 0x1E, 0xBC, 0xED, 0xE0, 0xB7, 0x1E, 0xBE, 0xF4, 0xE3, 0xD7,
            0x17, 0xEF, 0xCB, 0xFB, 0x5A, 0x41, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xCF,
            0x56, 0x6F, 0x2F, 0xCA, 0x5D, 0xC7, 0x56, 0xA4, 0xE6, 0xD4, 0xBF, 0x43, 0x76, 0xC4,
            0x3C, 0xB8, 0x72, 0x7A, 0x7E, 0xA3, 0xBD, 0xDE, 0xEF, 0x14, 0x65, 0x79, 0x74, 0xF1,
            0xF1, 0xA2, 0xFD, 0xF5, 0xA5, 0xEF, 0xC6, 0xCE, 0x72, 0x78, 0x79, 0xC7, 0xBE, 0xF4,
            0xBD, 0xD8, 0x39, 0xB6, 0xBF, 0xF3, 0xC0, 0xB4, 0x37, 0x1F, 0x39, 0xDA, 0xD7, 0xB9,
            0xF7, 0xFB, 0x33, 0x1D, 0xB9, 0x6F, 0xA6, 0x9D, 0x3F, 0x88, 0xAB, 0x33, 0xD0, 0xD7,
            0xFB, 0xD2, 0xD5, 0x19, 0x8D, 0x79, 0xB8, 0x6D, 0x7E, 0x38, 0xE6, 0x13, 0x6D, 0xF3,
            0x0F, 0x63, 0x5E, 0xBB, 0x74, 0x7A, 0xFE, 0x51, 0xCC, 0xCD, 0xB6, 0xAB, 0xFD, 0x48,
            0xCC, 0x37, 0xB7, 0xCD, 0xFB, 0xBB, 0x3E, 0x8D, 0x47, 0xBB, 0x3E, 0x8D, 0x1F, 0x77,
            0x3D, 0x7F, 0xAC, 0xEB, 0xF9, 0x3F, 0xE9, 0x7A, 0xFE, 0x81, 0x37, 0xF8, 0xA7, 0xA9,
            0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0xEB,
            0xD7, 0xBF, 0x7F, 0xD1, 0xE8, 0xBC, 0xFF, 0x30, 0xDE, 0xE8, 0xBC, 0xFF, 0xF0, 0xCB,
            0x46, 0xE7, 0xFD, 0x87, 0x43, 0x8D, 0xB9, 0xDD, 0x7F, 0x78, 0xB2, 0x31, 0xC3, 0xDD,
            0x9D, 0xC3, 0x8D, 0x19, 0xEE, 0xEE, 0xFC, 0xBA, 0x31, 0xC3, 0xED, 0x99, 0x89, 0xC6,
            0x0C, 0x77, 0x77, 0x7E, 0x33, 0xD3, 0x91, 0x47, 0x66, 0xDA, 0xF9, 0xDB, 0x46, 0xE7,
            0xDD, 0x9D, 0xA7, 0x1A, 0x9D, 0x77, 0x77, 0x7E, 0xD7, 0xE8, 0xBC, 0xBB, 0xF3, 0x74,
            0xA3, 0xF3, 0xEE, 0x8E, 0x6F, 0x89, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B,
            0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A,
            0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6,
            0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5,
            0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD,
            0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xB5, 0xD6, 0x5A, 0x6B, 0xAD, 0xCF, 0x95, 0x9E, 0xDA,
            0xEE, 0xED, 0x99, 0xCE, 0xBA, 0x34, 0x9D, 0xEC, 0x33, 0x6D, 0xC9, 0x96, 0xE4, 0xE3,
            0x23, 0x17, 0x47, 0x16, 0x47, 0xDE, 0x14, 0x59, 0x54, 0x67, 0x41, 0xEA, 0xB4, 0xA8,
            0x6B, 0x6E, 0x9D, 0xC6, 0xD4, 0x31, 0xEF, 0x4D, 0xAF, 0xA4, 0x48, 0xAF, 0xDA, 0xBC,
            0xB3, 0x70, 0x8E, 0xD7, 0x41, 0xFB, 0x75, 0x3A, 0x1F, 0xE6, 0xBB, 0xE2, 0x63, 0xB8,
            0x3B, 0x32, 0x1C, 0xB9, 0x27, 0xF2, 0xF5, 0xC8, 0xBD, 0xC5, 0xEC, 0xDF, 0x93, 0xAD,
            0xF1, 0xD8, 0x7D, 0x91, 0x91, 0xC8, 0xFD, 0xA7, 0x39, 0xEE, 0x74, 0x9F, 0x6E, 0x5E,
            0x45, 0x3D, 0x2F, 0x9A, 0x9E, 0x17, 0x39, 0xCF, 0x4B, 0xA2, 0xE7, 0xCE, 0x99, 0xED,
            0x5C, 0x03, 0x7D, 0xBD, 0x69, 0x38, 0x72, 0x22, 0xB2, 0x76, 0x69, 0xEF, 0xAC, 0xC7,
            0xE5, 0x15, 0xDA, 0xF3, 0x82, 0xEC, 0x79, 0xFD, 0xF5, 0xBC, 0xDC, 0x7A, 0x5E, 0x5D,
            0x3D, 0x2F, 0xA6, 0x3E, 0xDB, 0xEB, 0xC8, 0x6B, 0xAA, 0xE7, 0x75, 0xD4, 0xF3, 0xDA,
            0xE9, 0x79, 0xBD, 0xF4, 0xD9, 0x8E, 0xBB, 0x24, 0xB2, 0x29, 0xA5, 0xB1, 0xFC, 0x9E,
            0x6E, 0x89, 0xEC, 0xAB, 0xB7, 0x37, 0x47, 0xF2, 0xCF, 0xCC, 0xDB, 0xB7, 0xA6, 0x6A,
            0x31, 0xF8, 0xBC, 0xBD, 0x25, 0x55, 0x6B, 0xC0, 0xE7, 0xED, 0xDB, 0x52, 0xB5, 0xF4,
            0x7B, 0xDE, 0xFE, 0x72, 0xAA, 0x56, 0x7C, 0xCF, 0xDB, 0x5F, 0x49, 0xD5, 0x42, 0xEF,
            0x79, 0xFB, 0xAB, 0xF5, 0x6B, 0xC9, 0xDB, 0xB7, 0xA7, 0x6A, 0x6D, 0xF7, 0xBC, 0xFD,
            0xB5, 0x54, 0xAD, 0xEB, 0x9E, 0xB7, 0xEF, 0x48, 0xD5, 0x9A, 0xEE, 0x79, 0xBB, 0x3C,
            0x27, 0x7F, 0xE5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xAE, 0xD8, 0x53,
            0xA4, 0x74, 0x67, 0x74, 0x2B, 0xA4, 0x73, 0xBC, 0xB3, 0x4D, 0x29, 0x8D, 0x95, 0x45,
            0xF5, 0xDE, 0xE6, 0x7A, 0x8E, 0xC5, 0x91, 0x95, 0x91, 0x6D, 0x91, 0x8D, 0x91, 0xC7,
            0x22, 0x8D, 0x48, 0xF9, 0xAF, 0x93, 0x3D, 0xF9, 0x94, 0xBB, 0x2E, 0xFD, 0xFF, 0x64,
            0xA7, 0x5B, 0x96, 0xCD, 0xCB, 0x3D, 0xF0, 0x64, 0xD5, 0x47, 0x17, 0x1F, 0x2F, 0xCA,
            0xE1, 0xE5, 0x69, 0x6C, 0x7F, 0x91, 0xCA, 0xD1, 0xBE, 0x22, 0x77, 0x4E, 0x6B, 0x16,
            0x03, 0x7D, 0xBD, 0xCD, 0xE1, 0xC8, 0x89, 0xC8, 0xDA, 0xA5, 0xBD, 0xCD, 0xD6, 0xAB,
            0x14, 0xEF, 0xF9, 0x83, 0x67, 0x7A, 0xEC, 0x9A, 0xD5, 0x1F, 0xFA, 0x70, 0x7E, 0x4F,
            0x03, 0xF5, 0x35, 0x5A, 0x54, 0x7F, 0x0F, 0xE6, 0x45, 0x8A, 0xB6, 0xEF, 0x45, 0x4F,
            0xE4, 0xF7, 0x43, 0x29, 0x6D, 0x1E, 0x1D, 0xFA, 0xD4, 0xF8, 0x86, 0x07, 0xD6, 0x8D,
            0x6E, 0xB8, 0xA6, 0x1C, 0x19, 0x1A, 0x1A, 0x19, 0x99, 0xF8, 0x40, 0x79, 0x20, 0x95,
            0xEB, 0xAE, 0xD9, 0x94, 0x0E, 0x94, 0x69, 0xF3, 0xD0, 0x86, 0xCD, 0xE5, 0xE8, 0x86,
            0x6D, 0x13, 0x23, 0xE5, 0x68, 0xB9, 0xF9, 0x0B, 0x47, 0x47, 0xCA, 0xF2, 0xDE, 0x89,
            0x0D, 0x13, 0xB7, 0x5F, 0x36, 0xFE, 0x89, 0x91, 0x6F, 0xAF, 0x29, 0xF3, 0x89, 0xCA,
            0xEC, 0xA5, 0xD3, 0x4E, 0x0D, 0xE5, 0x19, 0x98, 0x3A, 0x68, 0xE7, 0xE7, 0x3F, 0xF6,
            0x50, 0xEB, 0xB9, 0xF5, 0xFD, 0xCB, 0x97, 0xA5, 0xD6, 0xEA, 0xD5, 0xF9, 0xD9, 0x1B,
            0xAF, 0x5A, 0x96, 0x96, 0xAF, 0xEC, 0x5F, 0xDE, 0xDF, 0xBA, 0xEE, 0xBA, 0xF2, 0xD9,
            0xB2, 0xFC, 0xC8, 0xBB, 0xDF, 0x1A, 0x9F, 0xF9, 0x9A, 0x55, 0xEF, 0x78, 0xDB, 0x92,
            0xF9, 0x47, 0xD2, 0xC6, 0x8D, 0x1B, 0xE3, 0x8D, 0x8E, 0xB4, 0x6F, 0xC7, 0x43, 0xEB,
            0xCA, 0xF5, 0xED, 0xFF, 0x8F, 0xB3, 0x0C, 0x0E, 0x0E, 0xBE, 0xFC, 0xD7, 0x43, 0x51,
            0x14, 0x53, 0x97, 0xCA, 0x6F, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x70, 0x76, 0x15, 0x75, 0xF2, 0xB2, 0x08, 0x79, 0xF9, 0x84, 0x8B, 0x22, 0x0B,
            0x23, 0xBD, 0x91, 0x4B, 0x22, 0x4B, 0x22, 0xCD, 0x48, 0x5F, 0xA4, 0x3F, 0xF2, 0x9E,
            0xC8, 0xE5, 0x91, 0x2B, 0x22, 0x57, 0x46, 0x56, 0x45, 0xAE, 0x8A, 0xE4, 0x15, 0x07,
            0xF2, 0xDA, 0x03, 0xD7, 0x46, 0x3E, 0x1B, 0xF9, 0x5C, 0xE4, 0xFA, 0xC8, 0x0D, 0x91,
            0xA1, 0xC8, 0x8D, 0x91, 0x2D, 0x91, 0xED, 0x91, 0x1D, 0x91, 0x5D, 0x91, 0xDD, 0x91,
            0x87, 0x22, 0x3F, 0x8D, 0xFC, 0x2C, 0xF2, 0xF3, 0xC8, 0xC1, 0xC8, 0x78, 0xE4, 0x50,
            0xE4, 0x89, 0xC8, 0xAF, 0x22, 0x87, 0x23, 0x47, 0x22, 0x4F, 0x45, 0x9E, 0x8E, 0xFC,
            0x21, 0x72, 0x34, 0xF2, 0x6C, 0xE4, 0x8F, 0x91, 0x63, 0x91, 0x3F, 0x47, 0xFE, 0x12,
            0x39, 0xD5, 0x6A, 0xB5, 0xE6, 0x9A, 0xEE, 0x6B, 0xD2, 0x3A, 0xCD, 0xBE, 0x62, 0xAE,
            0x17, 0xB8, 0x7D, 0x8D, 0x8A, 0x19, 0x4F, 0xDE, 0xAC, 0x4E, 0xDA, 0x5C, 0xE2, 0xCB,
            0xD8, 0x71, 0x6D, 0x0A, 0xB3, 0xD9, 0x6C, 0x36, 0x9B, 0xCF, 0x8F, 0xF9, 0x42, 0xFC,
            0xF3, 0xBC, 0xFD, 0x1A, 0x98, 0xCD, 0x66, 0xB3, 0xD9, 0x7C, 0x66, 0xF3, 0x85, 0xF7,
            0x67, 0xE6, 0x99, 0x5A, 0x5C, 0x77, 0x5E, 0x8F, 0x33, 0xAF, 0xEC, 0xF8, 0xD8, 0xC5,
            0xD5, 0x9C, 0xD7, 0xEB, 0x2C, 0xDA, 0xAE, 0x61, 0x5E, 0xB7, 0xB3, 0x7D, 0xCE, 0x6B,
            0x7A, 0xE6, 0x79, 0xEF, 0x3B, 0xAB, 0xB9, 0xB9, 0x22, 0x35, 0xF3, 0xBC, 0xAD, 0xFE,
            0xFB, 0xC9, 0xCD, 0xF5, 0xBC, 0xBD, 0x9E, 0x8F, 0xD5, 0xF3, 0x8E, 0x7A, 0x1E, 0x5C,
            0x59, 0xCD, 0x3B, 0xEB, 0x39, 0xAF, 0xF9, 0x99, 0xE7, 0xAD, 0xF5, 0x3C, 0x5C, 0xCF,
            0xF7, 0xD5, 0xF3, 0x89, 0x7A, 0x1E, 0xA9, 0xE7, 0xBC, 0x2E, 0x68, 0x9E, 0xEF, 0xAF,
            0xE7, 0xBC, 0xC6, 0x67, 0x9E, 0xDF, 0xFF, 0xFC, 0x33, 0x57, 0x3F, 0x1E, 0xF3, 0xBE,
            0xAE, 0x79, 0xEA, 0xE7, 0x0D, 0xD7, 0xC7, 0x7F, 0xFA, 0xF9, 0xB7, 0x4C, 0xCE, 0xDF,
            0xA8, 0xE7, 0xC3, 0xF5, 0xBC, 0xBB, 0x9E, 0x57, 0xFE, 0xAD, 0x9A, 0xF7, 0xD4, 0xF3,
            0xB6, 0x7A, 0x7E, 0xA0, 0xEB, 0xE7, 0x6D, 0xFD, 0x67, 0x75, 0xFE, 0xBB, 0xBA, 0xE6,
            0x6F, 0x76, 0xCD, 0xFB, 0xBA, 0xE6, 0x93, 0x5D, 0xF3, 0x3F, 0xE6, 0x75, 0xCE, 0x2F,
            0x5C, 0xDE, 0x39, 0xFF, 0xAF, 0x6B, 0x3E, 0xD9, 0x35, 0x0F, 0x0C, 0xCE, 0xEB, 0x98,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xB6, 0x47, 0x53,
            0x91, 0x52, 0xC3, 0x75, 0x80, 0x0B, 0x59, 0x51, 0x55, 0x2B, 0xA4, 0x85, 0x2E, 0x07,
            0xBC, 0xB6, 0x7A, 0x5C, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xCE, 0x73, 0xAD, 0x30, 0xB7, 0x67, 0x14, 0x1D, 0x53, 0x4F, 0x9D, 0x85,
            0x93, 0xE7, 0xAA, 0xF6, 0xCD, 0xEF, 0x9A, 0x2F, 0x8A, 0x23, 0xDA, 0xE7, 0xBC, 0xDD,
            0x5F, 0x9F, 0x69, 0x2A, 0x53, 0x8F, 0x2D, 0xEA, 0x7A, 0xEE, 0x82, 0x78, 0xB4, 0x7D,
            0x9E, 0xEB, 0xAB, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x5E, 0x6B, 0xAD, 0x49, 0x79, 0x6B, 0x41, 0xDB, 0xDE, 0x07,
            0xEB, 0x14, 0xF5, 0x7C, 0x68, 0xEF, 0xCE, 0xA2, 0x48, 0xCD, 0xE2, 0x95, 0xCE, 0x56,
            0xCC, 0xF9, 0xE7, 0xF7, 0xA7, 0xF5, 0xE9, 0x40, 0xDA, 0xD2, 0xEC, 0x49, 0x0B, 0x53,
            0x4F, 0xFC, 0x77, 0x2A, 0x5E, 0x4D, 0xB5, 0xBD, 0x30, 0x7D, 0x74, 0xD5, 0xF8, 0xC9,
            0xA1, 0x2B, 0xD2, 0x8A, 0x9B, 0xB6, 0x7C, 0x72, 0xCF, 0xEE, 0x2F, 0x3D, 0x32, 0xF4,
            0xDF, 0x3B, 0x52, 0x7A, 0xE1, 0xEE, 0x6B, 0x2F, 0xFB, 0x4F, 0x74, 0xF3, 0xEF, 0xCF,
            0x5C, 0xFD, 0x78, 0x9A, 0x9E, 0x0F, 0xFF, 0xF5, 0x86, 0xE7, 0xF2, 0xE3, 0xA7, 0xAA,
            0x37, 0xD4, 0xBA, 0xE9, 0xED, 0xC7, 0xFF, 0x94, 0xE7, 0xF5, 0xF3, 0xD7, 0xBF, 0x2B,
            0x3F, 0xFE, 0xC4, 0x9D, 0xD5, 0x71, 0x53, 0xFE, 0xBD, 0xE8, 0x8B, 0x93, 0xC7, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xCC, 0xC9, 0x8B,
        ];
        decompress_to_vec(&compressed).expect("Failed to decompress!")
    })
}

#[cfg(test)]
mod tests {
    use super::*;
    use binary_reader::BinaryReader;
    use std::fs::File;
    use std::io::Write;
    use std::fs;

    #[test]
    fn test_vagabond_singleton_behavior() {
        // Call the function multiple times
        let first_call = vagabond();
        let second_call = vagabond();

        // Check that both calls return the exact same `Vec<u8>` reference
        assert_eq!(
            first_call as *const _, second_call as *const _,
            "Vagabond should return the same instance on multiple calls"
        );
    }

    #[test]
    fn test_vagabond_contents() {
        // Call the function to get the `Vec<u8>`
        let data = vagabond();

        // Define what the expected data should be
        let expected_data_length = 2621456;

        // Check that the data matches expected data
        assert_eq!(
            data.len(),
            expected_data_length,
            "The contents of the Vagabond data vector do not match expected values"
        );
    }

    #[test]
    fn test_matches_stored_fixture() {
        let read_slot = &mut BinaryReader::from_u8(
            &fs::read("./fixtures/vagabond.slot").expect("Test file should be present in fixtures"),
        );
        let mut write_slot_compressed =
            File::create("./fixtures/vagabond.slot.compressed").expect("Test file should be present in fixtures");
        let bytes = miniz_oxide::deflate::compress_to_vec(
            &read_slot.data,
            miniz_oxide::deflate::CompressionLevel::UberCompression as u8,
        );
        let _ = write_slot_compressed.write_all(&bytes);
        let read_slot_compressed = &mut BinaryReader::from_u8(
            &fs::read("./fixtures/vagabond.slot.compressed")
                .expect("Test file should be present in fixtures"),
        );
        let read_slot_decompressed =
            decompress_to_vec(&read_slot_compressed.data).expect("Failed to decompress!");

        assert_eq!(read_slot.data, read_slot_decompressed);
        assert_eq!(&read_slot.data, vagabond())
    }
}
